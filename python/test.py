import rust_shed

def print_state(s):
    print("THE STATE")
    print(f"LEGAL ACTIONS {s.legal_actions}")
    print(f"THE HAND {[c.get_index() for c in s.hand]}")
    print(f"LIVE DECK SIZE {s.live_deck_size}")
    print(f"TOP CARD {s.top_card}")
    print(F"TOP RANK COUNT {s.top_card_count}")
    print(f"RELATIVE POSIITONS {s.positions}")
    print(f"GAME POINTER {s.current_player}")
    print(f"UNPLAYED DECK SIZE {s.unplayed_deck_size}")
    print("*"*20)

a = rust_shed.Game(2, False)
print(a.get_num_players())
print(a.get_active_player_id())
a.init_game()
print(a.get_legal_actions())
# print(a.get_payoffs())
print(a.get_positions())
print(a.get_active_deck())
print(print_state(a.get_state(a.get_active_player_id())))
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
a.step(a.get_legal_actions()[0])
print(a.get_legal_actions())
print(print_state(a.get_state(a.get_active_player_id())))
print(a.get_positions())
for c in a.get_active_deck():
    print(c.suit, c.rank)
